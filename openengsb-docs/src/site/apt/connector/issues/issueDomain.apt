~~
~~	Copyright 2009 OpenEngSB Division, Vienna University of Technology
~~
~~   Licensed under the Apache License, Version 2.0 (the "License");
~~   you may not use this file except in compliance with the License.
~~   You may obtain a copy of the License at
~~
~~       http://www.apache.org/licenses/LICENSE-2.0
~~
~~   Unless required by applicable law or agreed to in writing, software
~~   distributed under the License is distributed on an "AS IS" BASIS,
~~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~   See the License for the specific language governing permissions and
~~   limitations under the License.
~~
  [ATTENTION:] This page is only a proposal! This means that everyone is allowed to edit this page and it is 
  			   marked for change. This proposal could be seen as design idea and should be discussed in public
  			   and visible for everyone before implemented at all.

Issue Tracker Domain

  This page provides object and interface descriptions needed for the integration of issue tracking systems into OpenEngSB.
  The mapping between the interface of the specific issue tracker and OpenEngSB is designed to
  be easily extensible (e.g. adding new fields from issue trackers). There are a lot of issue trackers on the market.
  The focus lies on open source issue trackers. To model the interface 4 widespread systems were chosen:
  
  * Mantis
  
  * GitHub
  
  * Bugzilla
  
  * Trac


* Comparison

** Issue/Task

*------------------+--------+---------------------+----------+----------+------------+--------+
|<<Fields/Options>>|<<Type>>|<<Short description>>|<<Mantis>>|<<GitHub>>|<<Bugzilla>>|<<Trac>>|
*------------------+--------+---------------------+----------+----------+------------+--------+
|id|long or int|identify the issue|+|+|+|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|project|String|The name of the product/project the bug is being filed against|+|-|+|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|component|String|The name of a component in the product above. 1) Different meanings|-|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|summary or title|String|A brief description of the bug being filed.|+|+|+|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|version|String|A version of the product above; the version the bug was found in.|+|-|+|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|description|String|The initial description for this bug.|+|+|+|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|os|String|The operating system the bug was discovered on.|+|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|os version|String|The version of the operating system.|+|-|-|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|platform|String|What type of hardware the bug was experienced on.|+|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|priority|String|What order the bug will be fixed in by the developer, compared to the developers other bugs.|+|-|+|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|severity|String|How severe the bug is.|+|-|+|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|alias|String|The alias of this bug. If there is no alias or aliases are disabled, this will be an empty string.|-|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|assigned_to / owner|String|The login name of the user to whom the bug is assigned.|+|-|+|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|creation_time|Date|When the bug was created.|+|+|+|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|dupe_of|int|The bug ID of the bug that this bug is a duplicate of. If this bug isn't a duplicate of any bug, this will be an empty int.|-|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|is_open|boolean|Returns true (1) if this bug is open, false (0) if it is closed.|-|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|update_time|Date|When the bug was last changed.|+|+|+|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|status|String|The current status of the bug.|+|-|+|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|creation time|Date|When the bug was created.|-|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|resolution|String|The current resolution of the bug, or an empty string if the bug is open.|+|-|+|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|reporter|String|The author of the ticket.|+|+|-|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|monitor|String|The persons who monitor the issue.|+|-|-|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|keywords|String|Keywords that a ticket is marked with. Useful for searching and report generation.|-|-|-|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|milestone / targetversion|String|When this issue should be resolved at the latest.|+|-|-|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|cc|String|A comma-separated list of other users or E-Mail addresses to notify. Note that this does not imply responsiblity or any other policy.|-|-|+|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|fixed in version|String|The version the issue was fixed|+|-|-|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|type|String|The nature of the ticket (for example, defect or enhancement request) or self-defined categories|+|-|-|+|
*------------------+--------+---------------------+----------+----------+------------+--------+
|view state|String|The view state describes the point of view(public, private, any).|+|-|-|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|build|String|The version of the build|+|-|-|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|notes|List|Added notes after creation.|+|+|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|addtional information|String|These information should give more details of the issue.|+|-|-|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|steps to reproduce|String|If it is a bug, you can describe what you have to do to reproduce the error.|+|-|-|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|eta|String|no info|+|-|-|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|projection|String|no info|+|-|-|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|votes|int|You can vote to prioritise the open issue. This option is for opensource project to integrate all internal and external members|-|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+

** Comparison of issue trackers

	1) component vs. project/product
	The component field has different meanings accross the issue trackers.
	Bugzilla supports a project object(more abstract), that has more components where the 
	issues are noted. Other do not have this abstraction and the component describes the project. 
	For example trac describe it like this: "The project module or subsystem this ticket concerns. "

	Mantis, Trac(is named component but it is described differently) use project objects to add issue. 
	Github only supports label that describes the component, the assigend person or the build. 
	For integrating GitHub to TiTA you should define the labels to filter it and use the content of it. 
	Bugzilla design a additional layer that has to be mapped for the TiTA interface.

	2) Status vs. Resolution
	The issue tracker have different statuses. For example, GitHub has only three, not realy typically states: Open, Unread, Closed.
	For the interface a enum of all declared states is defined to support more than one issue tracker for the 
	resolution, but for the mappind of the issue status only that all provide.


* IssueNotes

*------------------+--------+---------------------+----------+----------+------------+--------+
|<<Fields/Options>>|<<Type>>|<<Short description>>|<<Mantis>>|<<GitHub>>|<<Bugzilla>>|<<Trac>>|
*------------------+--------+---------------------+----------+----------+------------+--------+
|id|int|Identifies the issue note|+|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|reporter|String|The person who wrote the note.|+|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|text|String|The comment itself.|+|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|view state|String|The view state describes the point of view(public, private, any)|+|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|date submitted|Date|The time when the note was submitted.|+|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|last modified|Date|The time when the note was the last time updated.|+|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|The time when the note was the last time updated.|int|estimated work time|-|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+

* Project for Issues

	WebService Object for Bugzilla is unstable, but the object extists in the backend. The additional fields of Bugzilla are not listed.

*------------------+--------+---------------------+----------+----------+------------+--------+
|<<Fields/Options>>|<<Type>>|<<Short description>>|<<Mantis>>|<<GitHub>>|<<Bugzilla>>|<<Trac>>|
*------------------+--------+---------------------+----------+----------+------------+--------+
|id|int|Identifies the project.|+|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|name|String|The name of the project.|+|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|status|String|A status that describes the whole project..|+|-|-|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|enabled|boolean|To lock any activities for the project.|+|-|-|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|view state|String|The view state describes the point of view(public, private, any)|+|-|-|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|access min|Object|To manage the access to the project.|+|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|file path|String|File path to the project in the filesystem.|+|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|description|String|The time when the note was the last time updated.|+|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|subproject|List|Defined supbprojects for the project.|+|-|+|-|
*------------------+--------+---------------------+----------+----------+------------+--------+
|inherit_global|boolean|no info|+|-|-|-|
*------------------+--------+---------------------+----------+----------+------------+--------+

	Subprojects are not included in the actual releases # no support.
	
* Interface description

---
package org.openengsb.issues.common;

import org.openengsb.issues.common.exceptions.IssueDomainException;
import org.openengsb.issues.common.model.Issue;

/**
 * Interface describing a generic issue domain.
 */
public interface IssueDomain {

    /**
     * Creates an issue.
     *
     * @param issue The issue to create.
     * @return ID of created issue
     */
    String createIssue(Issue issue) throws IssueDomainException;

    /**
     * Updates the given issue.
     *
     * @param issue The issue to update (the ID of the issue must be set).
     * @throws IssueDomainException
     */
    void updateIssue(Issue issue) throws IssueDomainException;

    /**
     * Deletes the issue with the given ID.
     *
     * @param id ID of the issue being deleted.
     * @throws IssueDomainException
     */
    void deleteIssue(String id) throws IssueDomainException;

}
---

* Exceptions

---
package org.openengsb.issues.common.exceptions;

public class IssueDomainException extends Exception {

    public IssueDomainException(String message) {
        super(message);
    }

    public IssueDomainException(String message, Throwable cause) {
        super(message, cause);
    }

}
---

* Domain model

** Domain object for Issue/Task/Bug

---
package org.openengsb.issues.common.model;

import java.util.Date;
import java.util.List;

public class Issue {

    private String id;
    private String summary;
    private String description;
    private String reporter;
    private String owner;
    private String affectedVersion;
    private IssuePriority priority;
    private IssueSeverity severity;
    private IssueResolution resolution;
    private IssueStatus status;
    private IssueType type;
    private List<Comment> comments;
    private Project project;
    private Date creationTime;
    private Date lastChange;

    /**
     * Supplies the identifier of the issue
     *
     * @return id - identifier of the issue
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the id of the issue to identify it.
     *
     * @param id - the id identifies the issue
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Returns the summary of the issue
     *
     * @return summary - short issue description
     */
    public String getSummary() {
        return summary;
    }

    /**
     * Sets the summary, a short description of the issue
     *
     * @param summary - short description
     */
    public void setSummary(String summary) {
        this.summary = summary;
    }

    /**
     * Return the detailed issue description
     *
     * @return description - detailed description
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the detailed description of the issue
     *
     * @param description - detailed description of the issue
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Returns the reporter of the issue
     *
     * @return reporter - author of the issue
     */
    public String getReporter() {
        return reporter;
    }

    /**
     * Sets the reporter(user of the issue tracker) of the issue
     *
     * @param reporter - the author of the issue
     */
    public void setReporter(String reporter) {
        this.reporter = reporter;
    }

    /**
     * Return the owner of the issue
     *
     * @return owner - person who has assigned to
     */
    public String getOwner() {
        return owner;
    }

    /**
     * Sets the owner of the issue
     *
     * @param owner - the person who has assigned to
     */
    public void setOwner(String owner) {
        this.owner = owner;
    }

    /**
     * Gets the version of the product in which the topic of this issue
     * occurred.
     *
     * @return
     */
    public String getAffectedVersion() {
        return affectedVersion;
    }

    /**
     * Sets the version of the product in which the topic of this issue
     * occurred.
     *
     * @param affectedVersion
     */
    public void setAffectedVersion(String affectedVersion) {
        this.affectedVersion = affectedVersion;
    }

    /**
     * Returns the priority of the issue
     *
     * @return priority - the priority of the issue
     * @see IssuePriority
     */
    public IssuePriority getPriority() {
        return priority;
    }

    /**
     * Sets the priority of the issue
     *
     * @param priority - uses the enumeration values for setting
     * @see IssuePriority
     */
    public void setPriority(IssuePriority priority) {
        this.priority = priority;
    }

    /**
     * Returns the severity of the issue
     *
     * @return severity - the severity of the issue
     * @see IssueSeverity
     */
    public IssueSeverity getSeverity() {
        return severity;
    }

    /**
     * Sets the severity of the issue
     *
     * @param severity - uses the enumeration values for setting
     * @see IssueSeverity
     */
    public void setSeverity(IssueSeverity severity) {
        this.severity = severity;
    }

    /**
     * Returns the resolution of the issue
     *
     * @return resolution - the resolution of the issue
     * @see IssueResolution
     */
    public IssueResolution getResolution() {
        return resolution;
    }

    /**
     * Sets the resolution of the issue
     *
     * @param resolution - uses the enumeration values for setting
     * @see IssueResolution
     */
    public void setResolution(IssueResolution resolution) {
        this.resolution = resolution;
    }

    /**
     * Returns the status of the issue
     *
     * @return status - the status of the issue
     * @see IssueStatus
     */
    public IssueStatus getStatus() {
        return status;
    }

    /**
     * Sets the status of the issue
     *
     * @param status - uses the enumeration values for setting
     * @see IssueStatus
     */
    public void setStatus(IssueStatus status) {
        this.status = status;
    }

    /**
     * Returns the type of the issue
     *
     * @return type - the type of the issue
     * @see IssueType
     */
    public IssueType getType() {
        return type;
    }

    /**
     * Sets the type of the issue
     *
     * @param type - the type of the issue
     */
    public void setType(IssueType type) {
        this.type = type;
    }

    /**
     * Returns a list of comments added to the issue
     *
     * @return comments - a list of comments
     * @see Comment
     */
    public List<Comment> getComments() {
        return comments;
    }

    /**
     * Sets the comments that are added to the issue At the creation time of
     * course null
     *
     * @param comments - a list of comments, default null
     * @see Comment
     */
    public void setComments(List<Comment> comments) {
        this.comments = comments;
    }

    /**
     * Returns the project the issue is being filed against
     *
     * @return project - the project the issue is being filed against
     * @see Project
     */
    public Project getProject() {
        return project;
    }

    /**
     * Sets the project of issue
     *
     * @param project - the project the issue is being filed against
     * @see IsProjectTrackable
     */
    public void setProject(Project project) {
        this.project = project;
    }

    /**
     * Returns the creation time of the issue
     *
     * @return creationTime - time the issue was created
     */
    public Date getCreationTime() {
        return creationTime;
    }

    /**
     * Sets the creation time of the issue due to the issue tracker
     *
     * @param creationTime - time the issue was created
     */
    public void setCreationTime(Date creationTime) {
        this.creationTime = creationTime;
    }

    /**
     * Returns the last change time
     *
     * @return lastChange - the time the last change was committed
     */
    public Date getLastChange() {
        return lastChange;
    }

    /**
     * Sets the time the last change was updated
     *
     * @param lastChange - the time the last change was updated
     */
    public void setLastChange(Date lastChange) {
        this.lastChange = lastChange;
    }

    /**
     * Compares this Issue to another Issue
     *
     * @param obj
     * @return true if the given Issue is equal to this Issue, false otherwise
     */
    public boolean equals(Object obj) {
        ...
    }
}
---

** Domain object for Comment

---
package org.openengsb.issues.common.model;

import java.util.Date;

public class Comment {

    private String id;
    private String reporter;
    private String text;
    private ViewState viewState;
    private Date creationTime;
    private Date lastChange;

    /**
     * Supplies the identifier of the comment
     *
     * @return id - identifier of the comment
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the id of the comment to identify it.
     *
     * @param id - the id identifies the comment
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Returns the reporter of the comment
     *
     * @return reporter - author of the comment
     */
    public String getReporter() {
        return reporter;
    }

    /**
     * Sets the reporter of the comment
     *
     * @param reporter - author of the comment
     */
    public void setReporter(String reporter) {
        this.reporter = reporter;
    }

    /**
     * Returns the text of the comment
     *
     * @return text - content of the comment
     */
    public String getText() {
        return text;
    }

    /**
     * Sets the text of the comment
     *
     * @param text - the content of the comment
     */
    public void setText(String text) {
        this.text = text;
    }

    /**
     * Returns the view state of the comment
     *
     * @return viewState - public, private or any
     * @see ViewState
     */
    public ViewState getViewState() {
        return viewState;
    }

    /**
     * Sets the state of the view for the comment It decides if everybody is
     * allowed to read it. The default value is public.
     *
     * @param viewState - uses the enumeration for setting
     * @see ViewState
     */
    public void setViewState(ViewState viewState) {
        this.viewState = viewState;
    }

    /**
     * Returns the creation time of the comment
     *
     * @return creationTime - time the comment was created
     */
    public Date getCreationTime() {
        return creationTime;
    }

    /**
     * Sets the creation time of the comment due to the issue tracker
     *
     * @param creationTime - time the comment was created
     */
    public void setCreationTime(Date creationTime) {
        this.creationTime = creationTime;
    }

    /**
     * Returns the last change time
     *
     * @return lastChange - the time the last change was committed
     */
    public Date getLastChange() {
        return lastChange;
    }

    /**
     * Sets the time the last change was updated
     *
     * @param lastChange - the time the last change was updated
     */
    public void setLastChange(Date lastChange) {
        this.lastChange = lastChange;
    }

}
---

** Domain object for Project

---
package org.openengsb.issues.common.model;

import java.net.URI;
import java.util.List;

public class Project {

    private String id;
    private String name;
    private ProjectStatus status;
    private String description;
    private URI uri;
    private List<Issue> issues;

    /**
     * Supplies the identifier of the project
     *
     * @return id - identifier of the project
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the id of the project to identify it.
     *
     * @param id - the id identifies the project
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Supplies the name of the project
     *
     * @return name - short description of the project
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the name of the project in the form of a short
     *
     * @param name - short description
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Supplies the topically status of the project
     *
     * @return status - the topically status of the project
     * @see ProjectStatus
     */
    public ProjectStatus getStatus() {
        return status;
    }

    /**
     * Sets the status of the project
     *
     * @param projectStatus - use the enumaration values for setting
     * @see ProjectStatus
     */
    public void setStatus(ProjectStatus status) {
        this.status = status;
    }

    /**
     * Supplies the detailed description of the project
     *
     * @return description - in detailed form
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the description of the project
     *
     * @param description - a detailed description of the project
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Supplies the URI of the project
     *
     * @return uri - place on the file system
     */
    public URI getUri() {
        return uri;
    }

    /**
     * Sets the URI of the project
     *
     * @param uri - place on the file system(remote in most cases)
     */
    public void setUri(URI uri) {
        this.uri = uri;
    }

    /**
     * Returns the issues of the project
     *
     * @return issues - reported issues of the project
     * @see Issue
     */
    public List<Issue> getIssues() {
        return issues;
    }

    /**
     * Sets the issues for this project
     *
     * @param issues - a list of issues
     * @see Issue
     */
    public void setIssues(List<Issue> issues) {
        this.issues = issues;
    }

}
---


** Enums

---
/**
 * Describes the possibilities for priorities
 */
public enum IssuePriority {
	IMMEDIATE, URGENT, HIGH, NORMAL, LOW, NONE
}

/**
 * Describes the possibilities for resolution
 */
public enum IssueResolution {
	OPEN, REOPENED, FIXED, INVALID, WONTFIX, 
        DUPLICATE, WORKSFORM, UNABLETOPRODUCE, 
        NOTFIXABLE, NOCHANGEREQUIRED, SUSPENDED
}

/**
 * Describes the possibilities for severity
 */
public enum IssueSeverity {
	BLOCK, CRASH, MAJOR, MINOR, TWEAK, TEXT, TRIVIAL, FEATURE
}

/**
 * Describes the possibilities for issue states
 */
public enum IssueStatus {
	NEW, ASSIGNED, CLOSED
}

/**
 * Describes the possibilities for the issue type
 */
public enum IssueType {
    BUG, IMPROVEMENT, NEW_FEATURE, TASK
}

/**
 * Describes the possibilities for project states
 */
public enum ProjectStatus {
	OPEN, ENABLED, DISABLE, CLOSED
}

/**
 * Describes the possibilities for the view state
 */
public enum ViewState {
	PUBLIC, PRIVATE, ANY
}
---














