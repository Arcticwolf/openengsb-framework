<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2010 OpenEngSB Division, Vienna University of Technology

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<chapter version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd   http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd   http://www.w3.org/2001/XMLSchema-instance http://www.w3.org/2001/XMLSchema-instance.xsd"
         xml:id="developer.taskbox" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Taskbox</title>

  <para>The Taskbox is a service which can be used when human interaction is required, e.g. by help desk applications.
  It consists of a core and an UI project. The core is responsible for storing tasks (via persistence), throwing
  events and starting workflows. Therefore it provides methods which can be called by workflows e.g. assigning a task to
  different user-roles (such as case worker or developer) or setting a task status.</para>

  <para>It is also the job of the core taskbox to choose the right wicket panel from the UI project to display the right
  information in a certain situation. A wicket panel contains of a HTML-snippet which can be embedded into another HTML file,
  an underlying data model some logic like buttonlisteners and session handling.</para>

  <para>So the idea is that an application which wants to use the taskbox only has to define an area in a wicket page where
  the taskbox is to be bound. The taskbox then takes control and takes user input to fill in the domain object behind
  which then gets stored again and used to decide how the workflow will go on. Based on the workflow and user interaction
  the taskbox then decides which panel is to be shown.</para>

  <para>For each main action, the Taskbox throws an event. Examples for that are create, assign, finish or edit events.
  These events are used to trigger or resume workflows and they can also be recorded by another component which then can
  reconstruct the flow based on them.</para>

  <para>The 
    <link xlink:href="${github}/core/common/src/main/java/org/openengsb/core/common/taskbox/TaskboxService.java">Taskbox service</link> 
  provides the methods to be called by workflows and to bind it to a UI. Take a closer look to explore its usage and
  possibilities.</para>
</chapter>

