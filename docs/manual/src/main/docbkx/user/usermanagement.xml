<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2010 OpenEngSB Division, Vienna University of Technology

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<chapter version="5.0"
  xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd   http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd   http://www.w3.org/2001/XMLSchema-instance http://www.w3.org/2001/XMLSchema-instance.xsd"
  xml:id="developer.management" xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ns="http://docbook.org/ns/docbook">
  <title>Usermanagement in the OpenEngSB</title>

  <para>The OpenEngSB has a central user management service, which can be used for example by an user interface.
    The service is designed to manage your users. You can create new user and save them to the persistence or retrieve,
    update and delete them. </para>

  <para>The user management needs a back-end database, e.g. the central persistence service of the OpenEngSB.</para>

  <para>
    The interface of the
    <link xlink:href="${github}/core/common/src/main/java/org/openengsb/core/common/usermanagement/UserManager.java">User manager</link>
    supports basic CRUD mechanisms. Instances of the user manager have to implement following methods
      * create(User): create a new user and save it to the persistence
    The <link xlink:href="${github}/core/common/src/main/java/org/openengsb/core/common/usermanagement/model/User.java">User</link>
    is the used user model. It holds attributes like a password, username, if the user is enabled, or his account is expired or locked.
    Another attribute are the authorities. These are the roles granted to the user. A user is identified by his username. So the username
    can not be changed.
  </para>

</chapter>

