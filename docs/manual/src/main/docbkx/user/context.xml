<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2010 OpenEngSB Division, Vienna University of Technology

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<chapter xml:id="developer.context" version="5.0" xmlns="http://docbook.org/ns/docbook"
  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd
  http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd
  http://www.w3.org/2001/XMLSchema-instance http://www.w3.org/2001/XMLSchema-instance.xsd">

  <title>Context Management</title>

  <para>Each project in the OpenEngSB has its own context to store meta information necessary for running inside of the
    OpenEngSB. The context basically is represented as a tree structure with key-value pairs as leafs.</para>

  <para>The context in which a workflow is executed, a rule fired or another action happens can be compared to the
  project in which the respective action happens. The context store therefore offers the possibility to perform
  project specific configurations.</para>

  <para>The <link xlink:href="${github}/core/common/src/main/java/org/openengsb/core/common/context/ContextService.java">context service</link>
  can be used to query the context and to insert, update or delete values. Note that under a specific name either a node or a leaf can be found, but not both. That means that
  the context can be compared to a file system, where context nodes are directories and context leaves files. The leaves in the context contain string key-value pairs.
  </para>

  <para>The <link xlink:href="${github}/core/common/src/main/java/org/openengsb/core/common/context/ContextCurrentService.java">current context service</link>
    extends the context service and provides additional methods for the management new root context entries (which correspond to projects).
  </para>

  <para>The <link xlink:href="${github}/core/common/src/main/java/org/openengsb/core/common/context/ContextHolder.java">ContextHolder</link>
    keeps track of the current threads' contexts. Invoking the set- and get-method always manipulate the context of the
    current Thread. When a new Thread is spawned it inherits the context from the parent thread.
  </para>




</chapter>

