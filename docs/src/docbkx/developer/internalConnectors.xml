<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--

   Copyright 2010 OpenEngSB Division, Vienna University of Technology

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

-->
<chapter id="internalConnectors" xmlns="http://docbook.org/ns/docbook">
  <title>Internal Tool Connectors</title>
  <section>
    <title>Introduction</title>
    <para>
      This chapter describes how to implement a tool connector. 
      Target audience are developers who want to connect a tool to OpenEngSB.
      A tool connector is an adapter between a tool and OpenEngSB.
      Every connector belongs to a tool domain which defines the common interface of
      all its tool connectors. This means that the tool connector has to translate all calls to the
      methods defined by the domain to the tool API. Furthermore it has to send Event-Objects
      to the bus when certain events happen in the tool. The Event-Objects are also defined by the
      tool domain.
    </para>
  </section>

  <section>
    <title>Prerequisites</title>
    <para>
      In case it isn't known what a tool domain is and how it defines the interface for
      the tool connector the chapter "OpenEngSB Tool Domains" is a good starting point.
      If there's already a matching domain for this tool it is strongly recommended to use it.
      But if this tool requires a new domain it has to be created. This is also described in the chapter
      "OpenEngSB Tool Domains".
    </para>
  </section>

  <section>
    <title>Context</title>
    <para>
      A connector is a JBI component. It implements the design pattern "Adapter". A tool connector
      has to translate (adapt) between functions and events defined by the domain interface and the tool API.
    </para>
  </section>

  <section>
    <title>Using the Archetype</title>
    <para>
      The following command is used to start the project generation:
      <literallayout><command>mvn</command> archetype:generate -DarchetypeCatalog="http://maven.openengsb.org/archetypes/"</literallayout>
      The archetype named connector-archetype should show up in the archetype list.
      Select the archetype connector-archetype. Maven will ask if the default values for the properties shall be used. Type <userinput>n</userinput> to overwrite the default values.
      The following properties are needed to generate a connector project:
      <itemizedlist>
        <listitem>artifactId: The artifactId of the generated wrapper project for the service-engine and the service-unit.</listitem>
        <listitem>groupId: The groupId of the generated wrapper project. Should be org.openengsb.</listitem>
        <listitem>version: The version of the generated wrapper project.</listitem>
        <listitem>se-artifactId: The artifactId of the service-engine.</listitem>
        <listitem>su-artifactId: The artifactId of the service-unit.</listitem>
        <listitem>description: The description of the tool connector.</listitem>
        <listitem>namespace: The namespace of the tool connector.</listitem>
        <listitem>package: The package for the source code of the service-engine.</listitem>
        <listitem>connector-name: The connector name. This is used as prefix for Java classes so it should start with a upper-case letter.</listitem>
        <listitem>domain-package: The package where the domain interface can be found which is implemented by this tool connector.</listitem>
        <listitem>domain-name: The interface name of the domain interface that is implemented by this tool connector.</listitem>
        <listitem>urn: The URN that will be used to address this tool connector.</listitem>
      </itemizedlist>
    </para>
    <para>
      If all these properties have been set Maven will generate the service-engine and the service-unit for the tool connector.
    </para>
  </section>
  
  <section>
    <title>Structure of the connector service-engine</title>
    <para>
      <programlisting><![CDATA[service-engine
     |
     ---------------
     |             |
  pom.xml         src
                   |
                  main
                   |
           -----------------
           |               |
          java          resources
           |               |
       <package>   contextProperties.xml
           |
          ---------------------------------------------
          |                                           |
<connector-name>Endpoint.java            <connector-name>Component.java]]></programlisting>
    </para>
    <para>
      The service-engine contains a stub of the connector endpoint and a simple implementation of the connector component as well as an empty contextProperties descriptor.
      The <filename>pom.xml</filename> file contains the necessary setup and all dependencies needed by an OpenEngSB tool connector service-engine. 
    </para>
  </section>
  
  <section>
    <title>Structure of the connector service-unit</title>
    <para>
      <programlisting>service-unit
     |
     ---------------
     |             |
  pom.xml         src
                   |
                  main
                   |
               resources
                   |
               xbean.xml</programlisting>
    </para>
    <para>
      The service-unit contains a fully configured xbean.xml file that provides the setup for an OpenEngSB tool connector service-unit.
      The <filename>pom.xml</filename> file contains the necessary dependency to the service-engine. 
    </para>
  </section>
  
  <section>
    <title>Additional steps to integrate the newly created tool connector into the OpenEngSB project</title>
    <para>
      To integrate the created tool connector the following steps have to be performed after the archetype was used to generate the service-engine and the service-unit.
      <itemizedlist>
        <listitem>Copy: The service-engine and the service-unit have to be copied to the right folder, which is starting from the OpenEngSB
        root folder <filename>/domains/domain-name/connector-name</filename> where domain-name and connector-name should be replaced by the respective names for the current tool connector.</listitem>
        <listitem>Parent <filename>pom.xml</filename>: Add the service engine and the service unit in the modules section and add the dependencies to the service-engine and the service-unit to the dependencyManagement section.</listitem>
        <listitem>Service-engine pom.xml: Correct the link to the parent <filename>pom.xml</filename>. (groupId, artifactId, version and relativePath).</listitem>
        <listitem>Service-unit pom.xml: Correct the link to the parent <filename>pom.xml</filename>. (groupId, artifactId, version and relativePath).</listitem>
        <listitem>Packaging: Add the dependency to the service-unit to the package-all service assembly's <filename>pom.xml</filename> to add the tool connector to this service assembly.</listitem>
      </itemizedlist>
    </para>
  </section>

</chapter>
