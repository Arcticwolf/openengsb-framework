<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--

    Copyright 2010 OpenEngSB Division, Vienna University of Technology

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<chapter id="twitterConnector" xmlns="http://docbook.org/ns/docbook">
  <title id="twitterConnector.title">Twitter Connector</title>
  
  <para>
    Source: <ulink url="http://github.com/openengsb/openengsb/" />
    IssueManagement: <ulink url="http://issues.openengsb.org/" />
  </para>

  <para>
    [Supported in version(s):] openengsb-1.0.0
  </para>
  
  <section>
    <title>connector-notification-twitter</title>
    
    <para>
      This connector enables OpenEngSB to post messages via Twitter. It currently uses the
      <ulink url="http://twitter4j.org/en/index.jsp">Twitter4J-library</ulink> for communication with the Twitter API.
    </para>
    
    <para>
      Two possible ways of communication are supported:
      
      <itemizedlist>
        <listitem>Update user status for messages without a receiver</listitem>
        <listitem>Send direct messages for messages containing a receiver</listitem>
      </itemizedlist>
    </para>

    <para>
      If attachments are delivered, they all get packed together in a single zip-file, uploaded to a server and finally
      the URL to this file is sent through a URL Shortener (currently <ulink url="http://tinyurl.com">Tinyurl</ulink>) and posted
      in the message.
    </para>
    
    <para>
      Due to the fact Twitter allows messages to contain a maximum of 140 characters, it is possible that a message
      is getting truncated. To prevent URLs from getting corrupted, they are placed at the very beginning of a message.
      When a message is too long a warning is given out.
    </para>
  

    <section>
      <title>Setup</title>
      
      <para>
        Basically two components need to be configured in order to make the twitter-connector work,
        Twitter itself and an FTP-server for the attachments.
      </para>
  
      <para>
        First you must provide username and password for authentication of the Twitter account.
        Therefore set both constructor arguments of the twitterFactory.getInstance factory method
        and then set this instance to our Twitter4JTwitterConnector bean.
      </para>
      
      <programlisting><![CDATA[  <bean id="twitterFactory" class="twitter4j.TwitterFactory" />

  <bean id="twitter" factory-bean="twitterFactory" factory-method="getInstance">
    <constructor-arg index="0" value="USERNAME" />
    <constructor-arg index="1" value="PASSWORD" />
  </bean>

  <bean id="ourTwitter" class="org.openengsb.twitter.common.Twitter4JTwitterConnector">
    <property name="twitter" ref="twitter" />
  </bean>]]></programlisting>

     <para>  
       To make the twitter-connector work with attachments an FTP-server needs to be up and running
       and its hostname, username and password provided to our FTPFileUpload bean.
     </para>
     
     <programlisting><![CDATA[[  <bean id="fileUpload" class="org.openengsb.core.util.FTPFileUpload">
    <property name="hostname" value="HOSTNAME" />
    <property name="username" value="USERNAME" />
    <property name="password" value="PASSWORD" />
  </bean>]]></programlisting>
  
     <para>
       In the end both beans and two additional util-beans (which don't need any parameters) are injected
       to our TwitterNotifier bean.
     </para>
     
     <programlisting><![CDATA[  <bean id="ourNotifier" class="org.openengsb.twitter.TwitterNotifier">
    <property name="twitterCon" ref="ourTwitter" />
    <property name="fileUpload" ref="fileUpload" />
    <property name="zipUtil" ref="zipUtil" />
    <property name="urlShortener" ref="urlShortener" />
  </bean>]]></programlisting>
  
  </section>
  
  <section>
    <title>Drools example rule</title>

<programlisting><![CDATA[
  when
    e : Event( name == "twitter" )
  then
    config.setToConnector(notification, "twitter");
    
    Notification n = new Notification();
    n.setMessage("Testmessage");
  
    String s = "testfile";

    Attachment a1 = new Attachment(s.getBytes(), "txt", "file1.txt");
    Attachment a2 = new Attachment(s.getBytes(), "pdf", "file2.pdf");
    Attachment a3 = new Attachment(s.getBytes(), "jpg", "file3.jpg");

    n.setAttachments(new Attachment[] {a1, a2, a3});
    notification.notify(n);

    config.setToDomain(notification);]]></programlisting>
  </section>
</section>
</chapter>
